pipeline {
  agent any

  environment {
    VERCEL_TOKEN = credentials('vercel-token') // Reemplaza con el ID real del token en Jenkins
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Maiky-ahoyo/CI-CD-Job.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('Run Tests') {
      steps {
        script {
          try {
            sh 'npm test'
          } catch (e) {
            currentBuild.result = 'FAILURE'
            error("❌ Tests fallaron. Detalles: ${e}")
          }
        }
      }
    }

    stage('Build') {
      when {
        expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
      }
      steps {
        sh 'npm run build'
      }
    }

    stage('Deploy') {
      when {
        allOf {
          branch 'main'
          expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
        }
      }
      steps {
        sh 'npm install -g vercel'
        sh 'vercel --prod --token $VERCEL_TOKEN --confirm'
      }
    }
  }

  post {
    success {
      slackSend channel: '#deploys',
                message: "✅ Build exitoso: ${env.JOB_NAME} #${env.BUILD_NUMBER} en rama ${env.GIT_BRANCH}"
    }

    failure {
      mail to: 'gaelborchardt@gmail.com',
           subject: "❌ Build Fallido: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
           body: "La construcción falló en la rama ${env.GIT_BRANCH}. Revisa: ${env.BUILD_URL}"

      slackSend channel: '#deploys',
                message: "❌ Build fallido: ${env.JOB_NAME} #${env.BUILD_NUMBER} en rama ${env.GIT_BRANCH}\n${env.BUILD_URL}"
    }
  }
}
